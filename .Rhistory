# Load libraries
library(explore)
#INSTALL LIBRARIES (not needed if already installed)
# install.packages("tidyverse")
# install.packages("tidytext")
# install.packages("sysfonts")
# install.packages("showtext")
#set of libraries for wrangling, cleaning, and plotting. includes ggplot
library(tidyverse)
library(dplyr)
library(tidytext)
#libraries for fonts
library(sysfonts)
library(showtext)
# Setting up fonts that we will use for our theme later
font_add_google("Chivo", "chivo")
showtext_auto()
# Read studentInfo.csv
student_info <- read_csv("studentInfo.csv")
#Displaying number of rows
num_rows <- nrow(student_info)
num_rows
#Displaying number of rows
num_cols <- ncol(student_info)
num_cols
#Displaying first 10 records using head
top_ten <- head(student_info, 10)
top_ten
#Displaying last 10 records using tail
last_ten <- tail(student_info, 10)
last_ten
missing_vals_cols <- names(which(colSums(is.na(student_info)) > 0))
missing_vals_cols
missing_perc <- (colSums(is.na(student_info[missing_vals_cols]))/nrow(student_info))*100
missing_perc
unique_highest_education <- as.data.frame(table(student_info["highest_education"]))
unique_highest_education
unique_students <- unique(student_info$id_student)
length(unique_students)
gender_students <- student_info %>%
group_by(gender) %>%
summarise(count = n_distinct(id_student))
gender_students
code_module_grouped <- student_info %>%
group_by(code_module) %>%
summarise(female = length(gender[gender=="F"]), # number of females per code_module
male = length(gender[gender=="M"]), # number of males per code_module
total_students = female + male,
perc_female = female/total_students,
perc_male = male/total_students)
# .groups = 'drop')
code_module_grouped
code_module_grouped_long <- gather(code_module_grouped,
key = "gender",
value = "count",
female, male)
code_module_grouped_long
plot <- ggplot(code_module_grouped_long, aes(x = code_module, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "fill")
plot
plot <- ggplot(code_module_grouped_long, aes(x = code_module, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_brewer(palette = "Dark2") +
labs(title="Gender Distribution of Students Across Code Modules",
y="Number of Students",
x="Code Module",
caption = "Figure 1"
) +
theme_minimal() +
theme(text=element_text(family="chivo"),
axis.title=element_text(face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x= element_blank(),
plot.title=element_text(face="bold"),
legend.position = "none")
plot
? legend.position
plot <- ggplot(code_module_grouped_long, aes(x = code_module, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_brewer(palette = "Dark2") +
labs(title="Gender Distribution of Students Across Code Modules",
y="Number of Students",
x="Code Module",
caption = "Figure 1"
) +
theme_minimal() +
theme(text=element_text(family="chivo"),
axis.title=element_text(face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x= element_blank(),
plot.title=element_text(face="bold"),
legend.position = "left")
plot
plot <- ggplot(code_module_grouped_long, aes(x = code_module, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_brewer(palette = "Dark2") +
labs(title="Gender Distribution of Students Across Code Modules",
y="Number of Students",
x="Code Module",
caption = "Figure 1"
) +
theme_minimal() +
theme(text=element_text(family="chivo"),
axis.title=element_text(face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x= element_blank(),
plot.title=element_text(face="bold"),
legend.position = "right")
plot
rbinom(10, 8, 0.6)
rbinom(10, size=11, 0.6)
rbinom(10, size=2, 0.6)
rbinom(10, size=12, 0.6)
? rbinom
setwd("~/Desktop/Mansi-Personal/WWCode/blockdatapy-talk")
library("tidyverse")
library("dplyr")
library("ggplot2")
heights <- read.csv('heights.txt', sep = ' ')
head(heights)
heights
heights <- heights %>%
rename("Mheight" = "Mh",
"Dheight" = "Dh")
heights <- read.csv('heights.txt', sep = ' ')
heights <- heights %>%
rename("Mheight" = "Mh",
"Dheight" = "Dh")
library("tidyverse")
library("dplyr")
library("ggplot2")
heights <- read.csv('heights.txt', sep = ' ')
heights <- heights %>%
rename("Mheight" = "Mh",
"Dheight" = "Dh")
names(height)
names(heights)
heights <- heights %>%
rename("Mh" = "Mheight",
"Dh" = "Dheight")
heights <- heights %>%
rename("Mh" = "Mheight",
"Dh" = "Dheight")
names(heights)
heights <- read.csv('heights.txt', sep = ' ')
names(heights)
heights_new <- heights %>%
rename("Mh" = "Mheight",
"Dh" = "Dheight")
heights_new
source("~/.active-rstudio-document", echo=TRUE)
# Create the scatter plot with regression line
ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point() +                       # Add scatter plot points
# Create the scatter plot with regression line
ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point()                    # Add scatter plot points
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh))
+ geom_point()
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point()
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "brickred")
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "brick red")
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "red") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "022B97") +
labs(title = "Relationship Between Heights of Mother and Daugther",
xlab = "Mother's Height",
ylab = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
labs(title = "Relationship Between Heights of Mother and Daugther",
xlab = "Mother's Height",
ylab = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
# Define a different color for outliers
outlier_color <- "#FF0000"  # Replace with the desired color for outliers
# Use scale_color_manual() to set the color for outlier points
p <- p + scale_color_manual(values = c("#022B97", outlier_color))
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
stat_summary( aes(label = round(stat(Dh), 2)),
geom = "text",
fun = function(y) {
boxplot.stats(y)$out
},
hjust = -1) +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
stat_summary( aes(label = round(stat(y), 2)),
geom = "text",
fun = function(y) {
boxplot.stats(y)$out
},
hjust = -1) +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
geom_text(data = subset(heights_new, Dh %in% boxplot.stats(Dh)$out),
aes(label = round(Dh, 2), color = "#FF0000"),
hjust = -1) +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
# geom_point(color = "#022B97") +
geom_point(color = ifelse(Dh %in% boxplot.stats(Dh)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
# geom_text(data = subset(heights_new, Dh %in% boxplot.stats(Dh)$out),
#          aes(label = round(Dh, 2), color = "#FF0000"),
#          hjust = -1) +
theme_minimal()
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
# geom_point(color = "#022B97") +
geom_point(color = ifelse(y %in% boxplot.stats(y)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
# geom_text(data = subset(heights_new, Dh %in% boxplot.stats(Dh)$out),
#          aes(label = round(Dh, 2), color = "#FF0000"),
#          hjust = -1) +
theme_minimal()
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
# geom_point(color = "#022B97") +
geom_point(color = ifelse(Dh %in% boxplot.stats(Dh)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
library("tidyverse")
library("dplyr")
library("ggplot2")
heights <- read.csv('heights.txt', sep = ' ')
names(heights)
heights_new <- heights %>%
rename("Mh" = "Mheight",
"Dh" = "Dheight")
heights_new
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
# geom_point(color = "#022B97") +
geom_point(color = ifelse(Dh %in% boxplot.stats(Dh)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
# geom_point(color = ifelse(Dh %in% boxplot.stats(Dh)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
View(heights_new)
colnames(heights_new)
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
# geom_point(color = "#022B97") +
geom_point(color = ifelse(Dh %in% boxplot.stats(Dh)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
boxplot.stats(Dh)$out
boxplot.stats(heights_new$Dh)$out
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
# geom_point(color = "#022B97") +
geom_point(color = ifelse(heights_new$Dh %in% boxplot.stats(heights_new$Dh)$out, "#FF0000", "#022B97")) +
geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
# geom_point(color = ifelse(heights_new$Dh %in% boxplot.stats(heights_new$Dh)$out, "#FF0000", "#022B97")) +
# geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
# Create the scatter plot with regression line
p <- ggplot(heights_new, aes(x = Mh, y = Dh)) +
geom_point(color = "#022B97") +
# geom_point(color = ifelse(heights_new$Dh %in% boxplot.stats(heights_new$Dh)$out, "#FF0000", "#022B97")) +
# geom_smooth(method = "lm", se = FALSE, color = "#970210") +
labs(title = "Relationship Between Heights of Mother and Daugther",
x = "Mother's Height",
y = "Daughter's Height") +
theme_minimal()
p
ggsave("why-viz.png", plot = p, width = 8, height = 6, dpi = 300)
